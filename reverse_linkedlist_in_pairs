#include <bits/stdc++.h>
using namespace std;
struct node{
    int data;
    node* next;
    
}*head;

void new_node(node **head,int data)
{
    node* new_n=new node;
    new_n->data=data;
     new_n->next=*head;
    *head=new_n;
}

void printList(struct node* ptr) 
{ 
    while (ptr != NULL) { 
       cout<<"->"<<ptr->data; 
        ptr = ptr->next; 
    } 
    cout<<"->NULL"; 
} 

node *reverse_in_pairs(node *root,int x)
{
    node* curr=root;
    node* prev=NULL;
    node* next=NULL;
    int c=0;
    
    while(curr!=NULL && c<x)
    {
        next=curr->next;
        curr->next=prev;  /*reverse first k nodes of the linked list */
        prev=curr;
        curr=next;
        c++;
    }
    if(next!=NULL)
    {
    root->next=reverse_in_pairs(next,x);  // next is now a pointer to (k+1)th node,
     }
     //Recursively call for the list starting from current.  
       return prev;
       // prev is new head of the input list 
    
}
int main()
{
    node* root=NULL;
    int n;
    
    for(int i=1;i<=10;i++)
    {
        new_node(&root,i);
    }
    cout<<"Enter pair size: ";
    cin>>n;
   cout<<"\nLinkedlist :\n";
    printList(root);
    root=reverse_in_pairs(root,n);
    cout<<"\n After reversal in pairs :\n";
    printList(root);
    return 0;

}

